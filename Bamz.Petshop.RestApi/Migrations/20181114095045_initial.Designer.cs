// <auto-generated />
using System;
using Bamz.Petshop.Infrastructure.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bamz.Petshop.RestApi.Migrations
{
    [DbContext(typeof(PetshopContext))]
    [Migration("20181114095045_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("Bamz.Petshop.Core.Entity.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<int?>("Floor");

                    b.Property<string>("Letter");

                    b.Property<int>("Number");

                    b.Property<string>("Side");

                    b.Property<string>("Street");

                    b.Property<int>("ZipCode");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Bamz.Petshop.Core.Entity.Colour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("Colours");
                });

            modelBuilder.Entity("Bamz.Petshop.Core.Entity.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CustomerId");

                    b.Property<DateTime>("OrderDate");

                    b.Property<double>("Price");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Bamz.Petshop.Core.Entity.OrderPetRelation", b =>
                {
                    b.Property<int>("OrderId");

                    b.Property<int>("PetId");

                    b.HasKey("OrderId", "PetId");

                    b.HasIndex("PetId");

                    b.ToTable("OrderPetRelation");
                });

            modelBuilder.Entity("Bamz.Petshop.Core.Entity.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AddressId");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<bool>("IsAdmin");

                    b.Property<string>("LastName");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<int>("Phone");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Bamz.Petshop.Core.Entity.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("Name");

                    b.Property<int?>("PreviousOwnerId");

                    b.Property<double>("Price");

                    b.Property<DateTime>("SoldDate");

                    b.Property<int?>("TypeId");

                    b.HasKey("Id");

                    b.HasIndex("PreviousOwnerId");

                    b.HasIndex("TypeId");

                    b.ToTable("Pets");
                });

            modelBuilder.Entity("Bamz.Petshop.Core.Entity.PetColourRelation", b =>
                {
                    b.Property<int>("PetId");

                    b.Property<int>("ColourId");

                    b.HasKey("PetId", "ColourId");

                    b.HasIndex("ColourId");

                    b.ToTable("PetColourRelation");
                });

            modelBuilder.Entity("Bamz.Petshop.Core.Entity.PetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("PetTypes");
                });

            modelBuilder.Entity("Bamz.Petshop.Core.Entity.Order", b =>
                {
                    b.HasOne("Bamz.Petshop.Core.Entity.Person", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("Bamz.Petshop.Core.Entity.OrderPetRelation", b =>
                {
                    b.HasOne("Bamz.Petshop.Core.Entity.Order", "Order")
                        .WithMany("Pets")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bamz.Petshop.Core.Entity.Pet", "Pet")
                        .WithMany()
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("Bamz.Petshop.Core.Entity.Person", b =>
                {
                    b.HasOne("Bamz.Petshop.Core.Entity.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Bamz.Petshop.Core.Entity.Pet", b =>
                {
                    b.HasOne("Bamz.Petshop.Core.Entity.Person", "PreviousOwner")
                        .WithMany()
                        .HasForeignKey("PreviousOwnerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Bamz.Petshop.Core.Entity.PetType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Bamz.Petshop.Core.Entity.PetColourRelation", b =>
                {
                    b.HasOne("Bamz.Petshop.Core.Entity.Colour", "Colour")
                        .WithMany()
                        .HasForeignKey("ColourId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Bamz.Petshop.Core.Entity.Pet", "Pet")
                        .WithMany("Colours")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
